    openapi: 3.0.0
    info:
      title: Sample API PATHS, PARAMETERS
      description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
      version: 0.1.9
    servers:
      - url: http://api.example.com/v1
        description: Optional server description, e.g. Main (production) server
      - url: https://staging-api.example.com
        description: Optional server description, e.g. Internal staging server for testing
    
    paths: 
      /usuarios:
        get:
          summary: Returns a list of users.
          description: Optional extended description in CommonMark or HTML
          responses:
            '200':
              description: A JSON array of user names
              content:
                application/json:
                  schema: 
                    type: array
                    items: 
                      type: string
      /usuarios/{userId}:
        get:
          summary: Returns a user by ID.
          parameters:
            - name: userId
              in: path
              required: true
              description: Parameter description in CommonMark or HTML.
              schema:
                type : integer
                format: int64
                minimum: 1
          responses: 
            '200':
              description: OK

      /usuarios/v2:
        post:
          summary: Creates a user.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
          responses: 
            '201':
              description: Created

      /usuarios/v3/{userId2}:
        get:
          summary: Returns a user by ID.
          parameters:
            - name: userId
              in: path
              required: true
              description: The ID of the user to return.
              schema:
                type: integer
                format: int64
                minimum: 1
          responses:
            '200':
              description: A user object.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                        example: 4
                      name:
                        type: string
                        example: Jessica Smith
            '400':
              description: The specified user ID is invalid (not a number).
            '404':
              description: A user with the specified ID was not found.
            default:
              description: Unexpected error

      /users/{userId}:
        get:
          summary: Returns a user by ID.
          parameters:
            - in: path
              name: userId
              required: true
              schema:
                type: integer
                format: int64
                minimum: 1
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/User'
      /users:
        post:
          summary: Creates a new user.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          responses:
            '201':
              description: Created  

    components:
      schemas:
        User:
          properties:
            id:
              type: integer
            name:
              type: string
          # Both properties are required
          required:  
            - id
            - name   
            
      securitySchemes:
        UserSecurity:
          type: http
          scheme: basic
        APIKey:
          type: http
          scheme: bearer
          bearerFormat: TOKEN
    security:
      - UserSecurity: []
      - APIKey: []
